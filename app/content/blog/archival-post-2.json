{
  "publishedAt": "3rd Jan 2022",
  "title": "Archival Post #2",
  "content": "# This old blog post was the beginning of my Docker compose conversion. I completed this project but never made a post for the completion.\n\n### This showcases my likeness for Docker and working with Linux.\n\n---\n\n---\n\n# Switching to Docker Compose\n### (Part 1)\n\n## Ubuntu Snaps\n\nOriginally, when I started up my Docker environment I set it up using the snap from Ubuntu. It was just one of the many things you can install when first setting up Ubuntu Server. I had thought that since I was going to install Docker anyway why not,, just get it out of the way.\n\nOr so I thought...\n\nAs it turns out, there's issues when using the docker snap.\n\n```\ndocker-runc did not terminate successfully container_linux.gosignaling init process caused \"permission denied\"\n```\n\nDid some reading about it being a possible conflict with AppArmor as apparently installing snaps adds a lot apprmor profiles. \n\n```\nsudo dmesg | grep apparmor\n```\n\nAnd oh boy, I think there's my problem.\n```\n[  100.969777] audit: type=1400 audit(1614973369.479:47): apparmor=\"STATUS\" operation=\"profile_load\" profile=\"unconfined\" name=\"docker-default\" pid=907 comm=\"apparmor_parser\"[ 1882.634712] audit: type=1400 audit(1614975151.576:48): apparmor=\"DENIED\" operation=\"signal\" profile=\"docker-default\" pid=7140 comm=\"runc\" requested_mask=\"receive\" denied_mask=\"receive\" signal=term peer=\"snap.docker.dockerd\"\n[ 1884.708985] audit: type=1400 audit(1614975153.652:49): apparmor=\"DENIED\" operation=\"signal\" profile=\"docker-default\" pid=7145 comm=\"runc\" requested_mask=\"receive\" denied_mask=\"receive\" signal=kill peer=\"snap.docker.dockerd\"\n[ 1892.755529] audit: type=1400 audit(1614975161.696:50): apparmor=\"DENIED\" operation=\"signal\" profile=\"docker-default\" pid=7151 comm=\"runc\" requested_mask=\"receive\" denied_mask=\"receive\" signal=term peer=\"snap.docker.dockerd\"\n[ 1894.829270] audit: type=1400 audit(1614975163.772:51): apparmor=\"DENIED\" operation=\"signal\" profile=\"docker-default\" pid=7156 comm=\"runc\" requested_mask=\"receive\" denied_mask=\"receive\" signal=kill peer=\"snap.docker.dockerd\"\n[ 1902.324871] audit: type=1400 audit(1614975171.268:52): apparmor=\"DENIED\" operation=\"signal\" profile=\"docker-default\" pid=7189 comm=\"runc\" requested_mask=\"receive\" denied_mask=\"receive\" signal=term peer=\"snap.docker.dockerd\"\n[ 1904.400709] audit: type=1400 audit(1614975173.344:53): apparmor=\"DENIED\" operation=\"signal\" profile=\"docker-default\" pid=7195 comm=\"runc\" requested_mask=\"receive\" denied_mask=\"receive\" signal=kill peer=\"snap.docker.dockerd\"\n[ 1928.444355] audit: type=1400 audit(1614975197.384:54): apparmor=\"DENIED\" operation=\"signal\" profile=\"docker-default\" pid=7221 comm=\"runc\" requested_mask=\"receive\" denied_mask=\"receive\" signal=term peer=\"snap.docker.dockerd\"\n[ 1930.521375] audit: type=1400 audit(1614975199.464:55): apparmor=\"DENIED\" operation=\"signal\" profile=\"docker-default\" pid=7226 comm=\"runc\" requested_mask=\"receive\" denied_mask=\"receive\" signal=kill peer=\"snap.docker.dockerd\"\n[ 1950.834013] audit: type=1400 audit(1614975219.775:56): apparmor=\"DENIED\" operation=\"signal\" profile=\"docker-default\" pid=7259 comm=\"runc\" requested_mask=\"receive\" denied_mask=\"receive\" signal=term peer=\"snap.docker.dockerd\"\n[ 1952.908453] audit: type=1400 audit(1614975221.847:57): apparmor=\"DENIED\" operation=\"signal\" profile=\"docker-default\" pid=7264 comm=\"runc\" requested_mask=\"receive\" denied_mask=\"receive\" signal=kill peer=\"snap.docker.dockerd\"\n[ 5174.247437] audit: type=1400 audit(1614978443.112:58): apparmor=\"DENIED\" operation=\"signal\" profile=\"docker-default\" pid=11107 comm=\"runc\" requested_mask=\"receive\" denied_mask=\"receive\" signal=term peer=\"snap.docker.dockerd\"\n[ 5176.320782] audit: type=1400 audit(1614978445.188:59): apparmor=\"DENIED\" operation=\"signal\" profile=\"docker-default\" pid=11112 comm=\"runc\" requested_mask=\"receive\" denied_mask=\"receive\" signal=kill peer=\"snap.docker.dockerd\"\n[ 5197.118513] audit: type=1400 audit(1614978465.983:60): apparmor=\"DENIED\" operation=\"signal\" profile=\"docker-default\" pid=11143 comm=\"runc\" requested_mask=\"receive\" denied_mask=\"receive\" signal=term peer=\"snap.docker.dockerd\"\n[ 5199.193945] audit: type=1400 audit(1614978468.059:61): apparmor=\"DENIED\" operation=\"signal\" profile=\"docker-default\" pid=11148 comm=\"runc\" requested_mask=\"receive\" denied_mask=\"receive\" signal=kill peer=\"snap.docker.dockerd\"\n[ 5212.430526] audit: type=1400 audit(1614978481.294:62): apparmor=\"DENIED\" operation=\"signal\" profile=\"docker-default\" pid=11158 comm=\"runc\" requested_mask=\"receive\" denied_mask=\"receive\" signal=term peer=\"snap.docker.dockerd\"\n```\n\nSo that's what is occurring everytime I make an attempt to stop ***any container*** in my stack. \n\n```\n$ sudo docker stop ce896ebb9ebc\nError response from daemon: cannot stop container: ce896ebb9ebc: Cannot kill container ce896ebb9ebca07315b63f06f6a1c7bf489b42fa13555631d4a6edabd28e4299: unknown error after kill: runc did not terminate sucessfully: container_linux.go:392: signaling init process caused \"permission denied\"\n: unknown\n```\n\n## Introducing Docker-Compose\n\nWhat I've been doing the last couple of week is just, restart the whole server when I need to make changes. That's clearly the wrong way to deal with this and it's time to make a change. \n*There is a way to remove \"unknown\" from AppArmor but I still want to use this as an excuse to switch.*\n\nAfter how long I've been dealing with this, this is how I feel about snaps now:\n\n![Ubuntu Snap Be Like That Sometimes](/images/ubuntu-snap.jpg)\n\nThe problem's I've been experiencing aren't exclusive to the docker snap but I believe so snaps themselves and how they work with apparmor. But regardless I want the flexibility that apt provides.\n\nSo it's a two part problem; switch to apt and migrate my docker run files to docker compose.\n\nI have persistent storage setup for my containers so it should be a breeze but I've still been stressing about doing this.\n\nFrom this:\n```\ndocker run --net=host --name=homebridge -e TZ=America/Chicago -e PUID=1000 -e PGID=1000 -e HOMEBRIDGE_CONFIG_UI=1 -e HOMEBRIDGE_CONFIG_UI_PORT=8080 -v /media/config:/homebridge --restart unless-stopped oznu/homebridge\n```\n\nTo this:\n```\nversion: '3.3'\nservices:\n    homebridge:\n        network_mode: host\n        container_name: homebridge\n        environment:\n            - TZ=America/Chicago\n            - PUID=1000\n            - PGID=1000\n            - HOMEBRIDGE_CONFIG_UI=1\n            - HOMEBRIDGE_CONFIG_UI_PORT=8080\n\tports:\n\t    - 8052:8080\n        volumes:\n            - '/media/config:/homebridge'\n        restart: unless-stopped\n        image: oznu/homebridge\n```\n\nAfter stopping and removing the docker snap, I followed the instructions from the official docker documentation. \n\nOne of the dependencies for Compose is [Docker Engine](https://docs.docker.com/engine/install/ubuntu/).\n\nFollowing the directions, after setting up the repository for Docker, getting Docker Engine up is as simple as: \n\n```\n sudo apt-get update\n\n sudo apt-get install docker-ce docker-ce-cli containerd.io\n```\n\nOnce that’s up we can install Docker Compose. Much like the instructions for the engine, [the instructions for compose are also easy to follow](https://docs.docker.com/compose/install/).\n\nThe long and short of it is two one-liners.\n\nFirst:\n```\nsudo curl -L \"https://github.com/docker/compose/releases/download/1.28.5/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n```\n\nAnd then applying executable permissions to the binary with the second one-liner:\n```\nsudo chmod +x /usr/local/bin/docker-compose\n```\n\nAfterwards you simply test it like this!:\n![Validating Compose Install](/images/compose-success.png)\n*Note: Obfuscating my username and name of the server as my internal naming convention is based on inside jokes in my household. Rather not embarrass myself.*\n\n## Conclusion so far\n\nIt's fairly simple to get a hang of Compose.\n\nWith the help of [composerize](https://www.composerize.com/) and the reference compose files for the services I run; I've made some progress.\n\nBelow is a table showing the progress so far in this migration. \n\n| To-Do | Mirgated | Issues |\n| --- | --- | --- |\n| pihole | complete | WEBPASSWORD env flag not working for a reason I couldn't get to the bottom of |\n| portainer | pending | configuration not carrying over |\n| homebridge-wyze | pending | --- |\n| plex | pending | --- |\n| unifi-controlller | complete | No issues |\n\nI would to figure out where my portainer config is hiding since it’s not carrying over when setting it back up with compose. \n\nPlex and Homebridge - They haven’t been a priority for me to get up, but I’ll circle back to them.\n\nThe switch over was a little more involved than I expected, so this is gonna be a two part journey.\n\nCatch you on part 2.\n\n***Stay Curious***",
  "featuredImage": "/images/uploads/homepage-docker-logo.png"
}